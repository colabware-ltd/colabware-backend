// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ProjectMetaData contains all meta data concerning the Project contract.
var ProjectMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reservedTokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getMaintainerTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b50604051620041b8380380620041b88339818101604052810190620000379190620003e3565b8484604051620000479062000198565b6200005492919062000506565b604051809103906000f08015801562000071573d6000803e3d6000fd5b50600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1982856040518363ffffffff1660e01b81526004016200011192919062000563565b600060405180830381600087803b1580156200012c57600080fd5b505af115801562000141573d6000803e3d6000fd5b505050508160038190555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505062000590565b613a37806200078183390190565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200020f82620001c4565b810181811067ffffffffffffffff82111715620002315762000230620001d5565b5b80604052505050565b600062000246620001a6565b905062000254828262000204565b919050565b600067ffffffffffffffff821115620002775762000276620001d5565b5b6200028282620001c4565b9050602081019050919050565b60005b83811015620002af57808201518184015260208101905062000292565b83811115620002bf576000848401525b50505050565b6000620002dc620002d68462000259565b6200023a565b905082815260208101848484011115620002fb57620002fa620001bf565b5b620003088482856200028f565b509392505050565b600082601f830112620003285762000327620001ba565b5b81516200033a848260208601620002c5565b91505092915050565b6000819050919050565b620003588162000343565b81146200036457600080fd5b50565b60008151905062000378816200034d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ab826200037e565b9050919050565b620003bd816200039e565b8114620003c957600080fd5b50565b600081519050620003dd81620003b2565b92915050565b600080600080600060a08688031215620004025762000401620001b0565b5b600086015167ffffffffffffffff811115620004235762000422620001b5565b5b620004318882890162000310565b955050602086015167ffffffffffffffff811115620004555762000454620001b5565b5b620004638882890162000310565b9450506040620004768882890162000367565b9350506060620004898882890162000367565b92505060806200049c88828901620003cc565b9150509295509295909350565b600081519050919050565b600082825260208201905092915050565b6000620004d282620004a9565b620004de8185620004b4565b9350620004f08185602086016200028f565b620004fb81620001c4565b840191505092915050565b60006040820190508181036000830152620005228185620004c5565b90508181036020830152620005388184620004c5565b90509392505050565b6200054c816200039e565b82525050565b6200055d8162000343565b82525050565b60006040820190506200057a600083018562000541565b62000589602083018462000552565b9392505050565b6101e180620005a06000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635a196d081461003b578063ad974f4c14610059575b600080fd5b610043610077565b6040516100509190610132565b60405180910390f35b610061610081565b60405161006e9190610132565b60405180910390f35b6000600354905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100f0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610114919061017e565b905090565b6000819050919050565b61012c81610119565b82525050565b60006020820190506101476000830184610123565b92915050565b600080fd5b61015b81610119565b811461016657600080fd5b50565b60008151905061017881610152565b92915050565b6000602082840312156101945761019361014d565b5b60006101a284828501610169565b9150509291505056fea26469706673582212206690ad2c7a5f06247726947a359a66da162b465cf3c4eab50290837020abdf0964736f6c634300080f003360806040523480156200001157600080fd5b5060405162003a3738038062003a3783398181016040528101906200003791906200055b565b818181600590816200004a91906200082b565b5080600690816200005c91906200082b565b5050506000600760006101000a81548160ff0219169083151502179055506200009e6000801b620000926200012860201b60201c565b6200013060201b60201c565b620000df7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620000d36200012860201b60201c565b6200013060201b60201c565b620001207f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620001146200012860201b60201c565b6200013060201b60201c565b505062000912565b600033905090565b6200014282826200014660201b60201c565b5050565b6200015d82826200018e60201b62000d061760201c565b6200018981600160008581526020019081526020016000206200027f60201b62000de61790919060201c565b505050565b620001a08282620002b760201b60201c565b6200027b57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620002206200012860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620002af836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6200032160201b60201c565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006200033583836200039b60201b60201c565b6200039057826000018290806001815401808255809150506001900390600052602060002001600090919091909150558260000180549050836001016000848152602001908152602001600020819055506001905062000395565b600090505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200042782620003dc565b810181811067ffffffffffffffff82111715620004495762000448620003ed565b5b80604052505050565b60006200045e620003be565b90506200046c82826200041c565b919050565b600067ffffffffffffffff8211156200048f576200048e620003ed565b5b6200049a82620003dc565b9050602081019050919050565b60005b83811015620004c7578082015181840152602081019050620004aa565b83811115620004d7576000848401525b50505050565b6000620004f4620004ee8462000471565b62000452565b905082815260208101848484011115620005135762000512620003d7565b5b62000520848285620004a7565b509392505050565b600082601f83011262000540576200053f620003d2565b5b815162000552848260208601620004dd565b91505092915050565b60008060408385031215620005755762000574620003c8565b5b600083015167ffffffffffffffff811115620005965762000595620003cd565b5b620005a48582860162000528565b925050602083015167ffffffffffffffff811115620005c857620005c7620003cd565b5b620005d68582860162000528565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200063357607f821691505b602082108103620006495762000648620005eb565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006b37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000674565b620006bf868362000674565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200070c620007066200070084620006d7565b620006e1565b620006d7565b9050919050565b6000819050919050565b6200072883620006eb565b62000740620007378262000713565b84845462000681565b825550505050565b600090565b6200075762000748565b620007648184846200071d565b505050565b5b818110156200078c57620007806000826200074d565b6001810190506200076a565b5050565b601f821115620007db57620007a5816200064f565b620007b08462000664565b81016020851015620007c0578190505b620007d8620007cf8562000664565b83018262000769565b50505b505050565b600082821c905092915050565b60006200080060001984600802620007e0565b1980831691505092915050565b60006200081b8383620007ed565b9150826002028217905092915050565b6200083682620005e0565b67ffffffffffffffff811115620008525762000851620003ed565b5b6200085e82546200061a565b6200086b82828562000790565b600060209050601f831160018114620008a357600084156200088e578287015190505b6200089a85826200080d565b8655506200090a565b601f198416620008b3866200064f565b60005b82811015620008dd57848901518255600182019150602085019450602081019050620008b6565b86831015620008fd5784890151620008f9601f891682620007ed565b8355505b6001600288020188555050505b505050505050565b61311580620009226000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063a457c2d711610097578063d539139311610071578063d53913931461052d578063d547741f1461054b578063dd62ed3e14610567578063e63ab1e914610597576101c4565b8063a457c2d71461049d578063a9059cbb146104cd578063ca15c873146104fd576101c4565b80639010d07c116100d35780639010d07c1461040157806391d148541461043157806395d89b4114610461578063a217fddf1461047f576101c4565b806370a08231146103ab57806379cc6790146103db5780638456cb59146103f7576101c4565b8063313ce567116101665780633f4ba83a116101405780633f4ba83a1461034b57806340c10f191461035557806342966c68146103715780635c975abb1461038d576101c4565b8063313ce567146102e157806336568abe146102ff578063395093511461031b576101c4565b806318160ddd116101a257806318160ddd1461024757806323b872dd14610265578063248a9ca3146102955780632f2ff15d146102c5576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063095ea7b314610217575b600080fd5b6101e360048036038101906101de9190611fab565b6105b5565b6040516101f09190611ff3565b60405180910390f35b61020161062f565b60405161020e91906120a7565b60405180910390f35b610231600480360381019061022c919061215d565b6106c1565b60405161023e9190611ff3565b60405180910390f35b61024f6106e4565b60405161025c91906121ac565b60405180910390f35b61027f600480360381019061027a91906121c7565b6106ee565b60405161028c9190611ff3565b60405180910390f35b6102af60048036038101906102aa9190612250565b61071d565b6040516102bc919061228c565b60405180910390f35b6102df60048036038101906102da91906122a7565b61073c565b005b6102e961075d565b6040516102f69190612303565b60405180910390f35b610319600480360381019061031491906122a7565b610766565b005b6103356004803603810190610330919061215d565b6107e9565b6040516103429190611ff3565b60405180910390f35b610353610820565b005b61036f600480360381019061036a919061215d565b61089a565b005b61038b6004803603810190610386919061231e565b610918565b005b61039561092c565b6040516103a29190611ff3565b60405180910390f35b6103c560048036038101906103c0919061234b565b610943565b6040516103d291906121ac565b60405180910390f35b6103f560048036038101906103f0919061215d565b61098c565b005b6103ff6109ac565b005b61041b60048036038101906104169190612378565b610a26565b60405161042891906123c7565b60405180910390f35b61044b600480360381019061044691906122a7565b610a55565b6040516104589190611ff3565b60405180910390f35b610469610abf565b60405161047691906120a7565b60405180910390f35b610487610b51565b604051610494919061228c565b60405180910390f35b6104b760048036038101906104b2919061215d565b610b58565b6040516104c49190611ff3565b60405180910390f35b6104e760048036038101906104e2919061215d565b610bcf565b6040516104f49190611ff3565b60405180910390f35b61051760048036038101906105129190612250565b610bf2565b60405161052491906121ac565b60405180910390f35b610535610c16565b604051610542919061228c565b60405180910390f35b610565600480360381019061056091906122a7565b610c3a565b005b610581600480360381019061057c91906123e2565b610c5b565b60405161058e91906121ac565b60405180910390f35b61059f610ce2565b6040516105ac919061228c565b60405180910390f35b60007f5a05180f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610628575061062782610e16565b5b9050919050565b60606005805461063e90612451565b80601f016020809104026020016040519081016040528092919081815260200182805461066a90612451565b80156106b75780601f1061068c576101008083540402835291602001916106b7565b820191906000526020600020905b81548152906001019060200180831161069a57829003601f168201915b5050505050905090565b6000806106cc610e90565b90506106d9818585610e98565b600191505092915050565b6000600454905090565b6000806106f9610e90565b9050610706858285611061565b6107118585856110ed565b60019150509392505050565b6000806000838152602001908152602001600020600101549050919050565b6107458261071d565b61074e81611366565b610758838361137a565b505050565b60006012905090565b61076e610e90565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d2906124f4565b60405180910390fd5b6107e582826113ae565b5050565b6000806107f4610e90565b90506108158185856108068589610c5b565b6108109190612543565b610e98565b600191505092915050565b6108517f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a61084c610e90565b610a55565b610890576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108879061260b565b60405180910390fd5b6108986113e2565b565b6108cb7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66108c6610e90565b610a55565b61090a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109019061269d565b60405180910390fd5b6109148282611445565b5050565b610929610923610e90565b8261159c565b50565b6000600760009054906101000a900460ff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61099e82610998610e90565b83611061565b6109a8828261159c565b5050565b6109dd7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109d8610e90565b610a55565b610a1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a139061272f565b60405180910390fd5b610a2461176b565b565b6000610a4d82600160008681526020019081526020016000206117ce90919063ffffffff16565b905092915050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060068054610ace90612451565b80601f0160208091040260200160405190810160405280929190818152602001828054610afa90612451565b8015610b475780601f10610b1c57610100808354040283529160200191610b47565b820191906000526020600020905b815481529060010190602001808311610b2a57829003601f168201915b5050505050905090565b6000801b81565b600080610b63610e90565b90506000610b718286610c5b565b905083811015610bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bad906127c1565b60405180910390fd5b610bc38286868403610e98565b60019250505092915050565b600080610bda610e90565b9050610be78185856110ed565b600191505092915050565b6000610c0f600160008481526020019081526020016000206117e8565b9050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610c438261071d565b610c4c81611366565b610c5683836113ae565b505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b610d108282610a55565b610de257600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d87610e90565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000610e0e836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6117fd565b905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610e895750610e888261186d565b5b9050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efe90612853565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f6d906128e5565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161105491906121ac565b60405180910390a3505050565b600061106d8484610c5b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146110e757818110156110d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d090612951565b60405180910390fd5b6110e68484848403610e98565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361115c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611153906129e3565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c290612a75565b60405180910390fd5b6111d68383836118d7565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561125d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125490612b07565b60405180910390fd5b818103600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161134d91906121ac565b60405180910390a36113608484846118e7565b50505050565b61137781611372610e90565b6118ec565b50565b6113848282610d06565b6113a98160016000858152602001908152602001600020610de690919063ffffffff16565b505050565b6113b88282611971565b6113dd8160016000858152602001908152602001600020611a5290919063ffffffff16565b505050565b6113ea611a82565b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61142e610e90565b60405161143b91906123c7565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036114b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ab90612b73565b60405180910390fd5b6114c0600083836118d7565b80600460008282546114d29190612543565b9250508190555080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161158491906121ac565b60405180910390a3611598600083836118e7565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361160b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160290612c05565b60405180910390fd5b611617826000836118d7565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561169e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169590612c97565b60405180910390fd5b818103600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161175291906121ac565b60405180910390a3611766836000846118e7565b505050565b611773611acb565b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586117b7610e90565b6040516117c491906123c7565b60405180910390a1565b60006117dd8360000183611b15565b60001c905092915050565b60006117f682600001611b40565b9050919050565b60006118098383611b51565b611862578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611867565b600090505b92915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6118e2838383611b74565b505050565b505050565b6118f68282610a55565b61196d5761190381611bcc565b6119118360001c6020611bf9565b604051602001611922929190612d8b565b6040516020818303038152906040526040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196491906120a7565b60405180910390fd5b5050565b61197b8282610a55565b15611a4e57600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506119f3610e90565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000611a7a836000018373ffffffffffffffffffffffffffffffffffffffff1660001b611e35565b905092915050565b611a8a61092c565b611ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ac090612e11565b60405180910390fd5b565b611ad361092c565b15611b13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0a90612e7d565b60405180910390fd5b565b6000826000018281548110611b2d57611b2c612e9d565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020541415905092915050565b611b7f838383611f49565b611b8761092c565b15611bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bbe90612f3e565b60405180910390fd5b505050565b6060611bf28273ffffffffffffffffffffffffffffffffffffffff16601460ff16611bf9565b9050919050565b606060006002836002611c0c9190612f5e565b611c169190612543565b67ffffffffffffffff811115611c2f57611c2e612fb8565b5b6040519080825280601f01601f191660200182016040528015611c615781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611c9957611c98612e9d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611cfd57611cfc612e9d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002611d3d9190612f5e565b611d479190612543565b90505b6001811115611de7577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110611d8957611d88612e9d565b5b1a60f81b828281518110611da057611d9f612e9d565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080611de090612fe7565b9050611d4a565b5060008414611e2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e229061305c565b60405180910390fd5b8091505092915050565b60008083600101600084815260200190815260200160002054905060008114611f3d576000600182611e67919061307c565b9050600060018660000180549050611e7f919061307c565b9050818114611eee576000866000018281548110611ea057611e9f612e9d565b5b9060005260206000200154905080876000018481548110611ec457611ec3612e9d565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480611f0257611f016130b0565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611f43565b60009150505b92915050565b505050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f8881611f53565b8114611f9357600080fd5b50565b600081359050611fa581611f7f565b92915050565b600060208284031215611fc157611fc0611f4e565b5b6000611fcf84828501611f96565b91505092915050565b60008115159050919050565b611fed81611fd8565b82525050565b60006020820190506120086000830184611fe4565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561204857808201518184015260208101905061202d565b83811115612057576000848401525b50505050565b6000601f19601f8301169050919050565b60006120798261200e565b6120838185612019565b935061209381856020860161202a565b61209c8161205d565b840191505092915050565b600060208201905081810360008301526120c1818461206e565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120f4826120c9565b9050919050565b612104816120e9565b811461210f57600080fd5b50565b600081359050612121816120fb565b92915050565b6000819050919050565b61213a81612127565b811461214557600080fd5b50565b60008135905061215781612131565b92915050565b6000806040838503121561217457612173611f4e565b5b600061218285828601612112565b925050602061219385828601612148565b9150509250929050565b6121a681612127565b82525050565b60006020820190506121c1600083018461219d565b92915050565b6000806000606084860312156121e0576121df611f4e565b5b60006121ee86828701612112565b93505060206121ff86828701612112565b925050604061221086828701612148565b9150509250925092565b6000819050919050565b61222d8161221a565b811461223857600080fd5b50565b60008135905061224a81612224565b92915050565b60006020828403121561226657612265611f4e565b5b60006122748482850161223b565b91505092915050565b6122868161221a565b82525050565b60006020820190506122a1600083018461227d565b92915050565b600080604083850312156122be576122bd611f4e565b5b60006122cc8582860161223b565b92505060206122dd85828601612112565b9150509250929050565b600060ff82169050919050565b6122fd816122e7565b82525050565b600060208201905061231860008301846122f4565b92915050565b60006020828403121561233457612333611f4e565b5b600061234284828501612148565b91505092915050565b60006020828403121561236157612360611f4e565b5b600061236f84828501612112565b91505092915050565b6000806040838503121561238f5761238e611f4e565b5b600061239d8582860161223b565b92505060206123ae85828601612148565b9150509250929050565b6123c1816120e9565b82525050565b60006020820190506123dc60008301846123b8565b92915050565b600080604083850312156123f9576123f8611f4e565b5b600061240785828601612112565b925050602061241885828601612112565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061246957607f821691505b60208210810361247c5761247b612422565b5b50919050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006124de602f83612019565b91506124e982612482565b604082019050919050565b6000602082019050818103600083015261250d816124d1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061254e82612127565b915061255983612127565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561258e5761258d612514565b5b828201905092915050565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f76652070617573657220726f6c6520746f20756e706175736500000000000000602082015250565b60006125f5603983612019565b915061260082612599565b604082019050919050565b60006020820190508181036000830152612624816125e8565b9050919050565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f7665206d696e74657220726f6c6520746f206d696e7400000000000000000000602082015250565b6000612687603683612019565b91506126928261262b565b604082019050919050565b600060208201905081810360008301526126b68161267a565b9050919050565b7f45524332305072657365744d696e7465725061757365723a206d75737420686160008201527f76652070617573657220726f6c6520746f207061757365000000000000000000602082015250565b6000612719603783612019565b9150612724826126bd565b604082019050919050565b600060208201905081810360008301526127488161270c565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006127ab602583612019565b91506127b68261274f565b604082019050919050565b600060208201905081810360008301526127da8161279e565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061283d602483612019565b9150612848826127e1565b604082019050919050565b6000602082019050818103600083015261286c81612830565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006128cf602283612019565b91506128da82612873565b604082019050919050565b600060208201905081810360008301526128fe816128c2565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061293b601d83612019565b915061294682612905565b602082019050919050565b6000602082019050818103600083015261296a8161292e565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006129cd602583612019565b91506129d882612971565b604082019050919050565b600060208201905081810360008301526129fc816129c0565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000612a5f602383612019565b9150612a6a82612a03565b604082019050919050565b60006020820190508181036000830152612a8e81612a52565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000612af1602683612019565b9150612afc82612a95565b604082019050919050565b60006020820190508181036000830152612b2081612ae4565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000612b5d601f83612019565b9150612b6882612b27565b602082019050919050565b60006020820190508181036000830152612b8c81612b50565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000612bef602183612019565b9150612bfa82612b93565b604082019050919050565b60006020820190508181036000830152612c1e81612be2565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000612c81602283612019565b9150612c8c82612c25565b604082019050919050565b60006020820190508181036000830152612cb081612c74565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b6000612cf8601783612cb7565b9150612d0382612cc2565b601782019050919050565b6000612d198261200e565b612d238185612cb7565b9350612d3381856020860161202a565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b6000612d75601183612cb7565b9150612d8082612d3f565b601182019050919050565b6000612d9682612ceb565b9150612da28285612d0e565b9150612dad82612d68565b9150612db98284612d0e565b91508190509392505050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000612dfb601483612019565b9150612e0682612dc5565b602082019050919050565b60006020820190508181036000830152612e2a81612dee565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000612e67601083612019565b9150612e7282612e31565b602082019050919050565b60006020820190508181036000830152612e9681612e5a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f45524332305061757361626c653a20746f6b656e207472616e7366657220776860008201527f696c652070617573656400000000000000000000000000000000000000000000602082015250565b6000612f28602a83612019565b9150612f3382612ecc565b604082019050919050565b60006020820190508181036000830152612f5781612f1b565b9050919050565b6000612f6982612127565b9150612f7483612127565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612fad57612fac612514565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000612ff282612127565b91506000820361300557613004612514565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b6000613046602083612019565b915061305182613010565b602082019050919050565b6000602082019050818103600083015261307581613039565b9050919050565b600061308782612127565b915061309283612127565b9250828210156130a5576130a4612514565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212203b01146899438d41115ef12a04f32d3b644dae28bd864b06408c2ddbd0821c8a64736f6c634300080f0033",
}

// ProjectABI is the input ABI used to generate the binding from.
// Deprecated: Use ProjectMetaData.ABI instead.
var ProjectABI = ProjectMetaData.ABI

// ProjectBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ProjectMetaData.Bin instead.
var ProjectBin = ProjectMetaData.Bin

// DeployProject deploys a new Ethereum contract, binding an instance of Project to it.
func DeployProject(auth *bind.TransactOpts, backend bind.ContractBackend, _tokenName string, _tokenSymbol string, _totalTokens *big.Int, _reservedTokens *big.Int, _wallet common.Address) (common.Address, *types.Transaction, *Project, error) {
	parsed, err := ProjectMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ProjectBin), backend, _tokenName, _tokenSymbol, _totalTokens, _reservedTokens, _wallet)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Project{ProjectCaller: ProjectCaller{contract: contract}, ProjectTransactor: ProjectTransactor{contract: contract}, ProjectFilterer: ProjectFilterer{contract: contract}}, nil
}

// Project is an auto generated Go binding around an Ethereum contract.
type Project struct {
	ProjectCaller     // Read-only binding to the contract
	ProjectTransactor // Write-only binding to the contract
	ProjectFilterer   // Log filterer for contract events
}

// ProjectCaller is an auto generated read-only Go binding around an Ethereum contract.
type ProjectCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProjectTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ProjectTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProjectFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ProjectFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProjectSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ProjectSession struct {
	Contract     *Project          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ProjectCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ProjectCallerSession struct {
	Contract *ProjectCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// ProjectTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ProjectTransactorSession struct {
	Contract     *ProjectTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// ProjectRaw is an auto generated low-level Go binding around an Ethereum contract.
type ProjectRaw struct {
	Contract *Project // Generic contract binding to access the raw methods on
}

// ProjectCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ProjectCallerRaw struct {
	Contract *ProjectCaller // Generic read-only contract binding to access the raw methods on
}

// ProjectTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ProjectTransactorRaw struct {
	Contract *ProjectTransactor // Generic write-only contract binding to access the raw methods on
}

// NewProject creates a new instance of Project, bound to a specific deployed contract.
func NewProject(address common.Address, backend bind.ContractBackend) (*Project, error) {
	contract, err := bindProject(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Project{ProjectCaller: ProjectCaller{contract: contract}, ProjectTransactor: ProjectTransactor{contract: contract}, ProjectFilterer: ProjectFilterer{contract: contract}}, nil
}

// NewProjectCaller creates a new read-only instance of Project, bound to a specific deployed contract.
func NewProjectCaller(address common.Address, caller bind.ContractCaller) (*ProjectCaller, error) {
	contract, err := bindProject(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ProjectCaller{contract: contract}, nil
}

// NewProjectTransactor creates a new write-only instance of Project, bound to a specific deployed contract.
func NewProjectTransactor(address common.Address, transactor bind.ContractTransactor) (*ProjectTransactor, error) {
	contract, err := bindProject(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ProjectTransactor{contract: contract}, nil
}

// NewProjectFilterer creates a new log filterer instance of Project, bound to a specific deployed contract.
func NewProjectFilterer(address common.Address, filterer bind.ContractFilterer) (*ProjectFilterer, error) {
	contract, err := bindProject(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ProjectFilterer{contract: contract}, nil
}

// bindProject binds a generic wrapper to an already deployed contract.
func bindProject(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ProjectABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Project *ProjectRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Project.Contract.ProjectCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Project *ProjectRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Project.Contract.ProjectTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Project *ProjectRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Project.Contract.ProjectTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Project *ProjectCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Project.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Project *ProjectTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Project.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Project *ProjectTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Project.Contract.contract.Transact(opts, method, params...)
}

// GetMaintainerTokens is a free data retrieval call binding the contract method 0x5a196d08.
//
// Solidity: function getMaintainerTokens() view returns(uint256)
func (_Project *ProjectCaller) GetMaintainerTokens(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Project.contract.Call(opts, &out, "getMaintainerTokens")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMaintainerTokens is a free data retrieval call binding the contract method 0x5a196d08.
//
// Solidity: function getMaintainerTokens() view returns(uint256)
func (_Project *ProjectSession) GetMaintainerTokens() (*big.Int, error) {
	return _Project.Contract.GetMaintainerTokens(&_Project.CallOpts)
}

// GetMaintainerTokens is a free data retrieval call binding the contract method 0x5a196d08.
//
// Solidity: function getMaintainerTokens() view returns(uint256)
func (_Project *ProjectCallerSession) GetMaintainerTokens() (*big.Int, error) {
	return _Project.Contract.GetMaintainerTokens(&_Project.CallOpts)
}

// GetTokenSupply is a free data retrieval call binding the contract method 0xad974f4c.
//
// Solidity: function getTokenSupply() view returns(uint256)
func (_Project *ProjectCaller) GetTokenSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Project.contract.Call(opts, &out, "getTokenSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTokenSupply is a free data retrieval call binding the contract method 0xad974f4c.
//
// Solidity: function getTokenSupply() view returns(uint256)
func (_Project *ProjectSession) GetTokenSupply() (*big.Int, error) {
	return _Project.Contract.GetTokenSupply(&_Project.CallOpts)
}

// GetTokenSupply is a free data retrieval call binding the contract method 0xad974f4c.
//
// Solidity: function getTokenSupply() view returns(uint256)
func (_Project *ProjectCallerSession) GetTokenSupply() (*big.Int, error) {
	return _Project.Contract.GetTokenSupply(&_Project.CallOpts)
}
